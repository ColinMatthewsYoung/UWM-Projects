import edu.uwm.cs351.RewardSeeker;
import edu.uwm.cs351.Task;

import java.util.Comparator;
import junit.framework.TestCase;

public class TestExhaustive extends TestCase {
  private Comparator<Task> comp = RewardSeeker.getInstance();

	public void test0000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		assertNull(t1.getPrevious());
		assertNull(t1.getNext());
	}

	public void test1000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test1001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test1002() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test2000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2002() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test2003() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2004() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2005() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test2006() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test2007() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2008() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test2009() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test2010() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test2011() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test2012() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3002() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3003() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3004() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3005() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3006() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3007() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3008() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3009() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3010() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3011() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3012() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3013() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3014() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3015() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3016() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3017() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3018() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3019() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3020() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3021() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3022() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3023() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3024() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3025() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3026() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3027() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3028() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3029() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3030() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3031() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3032() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3033() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3034() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3035() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3036() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3037() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3038() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3039() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3040() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3041() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3042() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3043() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3044() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3045() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3046() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3047() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3048() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3049() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3050() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3051() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3052() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3053() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3054() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3055() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3056() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3057() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3058() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3059() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3060() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3061() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3062() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3063() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3064() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3065() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3066() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test3067() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3068() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3069() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3070() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3071() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test3072() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test3073() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test3074() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4002() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4003() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4004() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4005() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4006() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4007() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4008() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4009() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4010() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4011() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4012() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4013() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4014() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4015() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4016() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4017() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4018() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4019() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4020() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4021() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4022() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4023() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4024() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4025() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4026() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4027() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4028() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4029() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4030() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4031() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4032() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4033() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4034() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4035() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4036() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4037() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4038() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4039() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4040() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4041() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4042() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4043() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4044() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4045() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4046() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4047() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4048() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4049() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4050() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4051() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4052() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4054() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4055() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4056() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4057() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4058() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4059() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4060() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4061() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4062() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4063() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4064() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4065() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4066() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4067() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4068() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4069() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4070() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4071() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4072() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4073() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4074() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4075() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4076() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4077() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4078() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4079() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4080() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4081() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4082() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4083() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4084() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4085() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4086() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4087() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4088() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4089() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4090() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4091() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4092() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4093() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4094() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4095() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4096() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4097() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4098() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4099() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4100() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4101() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4102() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4103() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4104() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4105() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4106() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4107() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4108() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4109() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4110() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4111() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4112() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4113() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4114() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4115() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4116() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4117() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4118() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4119() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4120() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4121() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4122() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4123() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4124() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4125() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4126() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4127() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4128() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4129() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4130() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4131() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4132() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4133() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4134() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4135() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4136() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4137() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4138() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4139() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4140() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4141() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4142() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4143() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4144() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4145() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4146() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4147() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4148() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4149() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4150() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4151() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4152() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4153() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4154() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4155() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4156() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4157() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4158() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4159() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4160() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4161() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4162() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4163() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4164() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4165() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4166() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4167() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4168() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4169() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4170() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4171() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4172() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4173() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4174() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4175() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4176() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4177() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4178() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4179() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4180() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4181() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4182() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4183() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4184() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4185() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4186() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4187() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4188() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4189() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4190() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4191() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4192() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4193() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4194() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4195() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4196() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4197() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4198() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4199() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4200() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4201() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4202() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4203() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4204() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4205() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4206() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4207() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4208() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4209() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4210() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4211() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4212() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4213() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4214() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4215() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4216() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4217() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4218() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4219() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4220() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4221() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4222() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4223() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4224() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4225() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4226() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4227() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4228() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4229() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4230() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4231() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4232() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4233() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4234() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4235() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4236() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4237() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4238() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4239() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4240() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4241() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4242() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4243() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4244() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4245() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4246() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4247() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4248() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4249() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4250() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4251() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4252() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4253() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4254() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4255() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4256() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4257() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4258() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4259() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4260() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4261() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4262() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4263() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4264() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4265() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4266() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4267() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4268() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4269() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4270() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4271() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4272() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4273() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4274() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4275() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4276() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4277() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4278() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4279() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4280() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4281() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4282() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4283() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4284() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4285() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4286() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4287() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4288() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4289() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4290() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4291() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4292() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4293() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4294() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4295() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4296() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4297() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4298() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4299() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4300() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4301() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4302() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4303() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4304() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4305() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4306() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4307() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4308() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4309() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4310() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4311() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4312() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4313() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4314() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4315() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4316() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4317() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4318() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4319() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4320() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4321() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4322() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4323() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4324() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4325() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4326() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4327() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4328() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4329() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4330() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4331() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4332() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4333() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4334() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4335() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4336() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4337() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4338() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4339() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4340() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4341() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4342() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4343() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4344() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4345() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4346() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4347() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4348() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4349() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4350() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4351() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4352() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4353() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4354() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4355() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4356() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4357() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4358() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4359() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4360() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4361() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4362() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4363() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4364() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4365() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4366() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4367() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4368() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4369() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4370() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4371() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4372() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4373() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4374() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4375() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4376() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4377() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4378() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4379() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4380() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4381() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4382() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4383() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4384() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4385() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4386() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4387() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4388() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4389() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4390() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4391() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4392() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4393() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4394() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4395() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4396() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4397() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4398() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4399() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4400() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4401() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4402() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4403() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4404() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4405() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4406() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4407() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4408() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4409() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4410() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4411() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4412() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4413() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4414() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4415() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4416() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4417() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4418() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4419() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4420() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4421() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4422() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4423() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4424() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4425() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4426() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4427() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4428() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4429() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4430() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4431() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4432() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4433() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4434() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4435() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4436() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4437() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4438() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4439() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4440() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4441() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4442() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4443() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4444() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4445() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4446() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4447() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4448() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4449() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4450() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4451() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4452() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4453() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4454() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4455() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4456() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4457() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4458() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4459() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4460() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4461() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4462() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4463() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4464() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4465() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4466() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4467() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4468() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4469() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4470() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4471() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4472() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4473() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4474() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4475() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4476() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4477() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4478() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4479() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4480() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4481() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4482() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4483() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4484() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4485() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4486() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4487() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4488() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4489() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4490() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4491() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4492() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4493() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4494() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4495() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4496() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4497() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4498() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4499() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4500() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4501() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4502() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4503() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4504() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4505() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4506() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4507() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4508() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4509() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4510() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4511() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4512() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4513() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4514() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4515() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4516() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test4517() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4518() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4519() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4520() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4521() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4522() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4523() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4524() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4525() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4526() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4527() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4528() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4529() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4530() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4531() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4532() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test4533() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4534() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4535() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4536() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4537() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test4538() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test4539() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test4540() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5002() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5003() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5004() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5005() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5006() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5007() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5008() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5009() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5010() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5011() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5012() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5013() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5014() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5015() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5016() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5017() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5018() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5019() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5020() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5021() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5022() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5023() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5024() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5025() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5026() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5027() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5028() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5029() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5030() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5031() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5032() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5033() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5034() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5035() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5036() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5037() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5038() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5039() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5040() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5041() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5042() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5043() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5044() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5045() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5046() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5047() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5048() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5049() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5050() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5051() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5052() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5054() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5055() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5056() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5057() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5058() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5059() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5060() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5061() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5062() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5063() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5064() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5065() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5066() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5067() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5068() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5069() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5070() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5071() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5072() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5073() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5074() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5075() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5076() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5077() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5078() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5079() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5080() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5081() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5082() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5083() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5084() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5085() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5086() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5087() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5088() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5089() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5090() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5091() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5092() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5093() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5094() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5095() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5096() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5097() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5098() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5099() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5100() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5101() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5102() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5103() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5104() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5105() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5106() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5107() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5108() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5109() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5110() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5111() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5112() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5113() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5114() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5115() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5116() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5117() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5118() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5119() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5120() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5121() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5122() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5123() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5124() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5125() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5126() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5127() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5128() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5129() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5130() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5131() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5132() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5133() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5134() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5135() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5136() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5137() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5138() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5139() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5140() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5141() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5142() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5143() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5144() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5145() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5146() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5147() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5148() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5149() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5150() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5151() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5152() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5153() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5154() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5155() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5156() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5157() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5158() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5159() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5160() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5161() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5162() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5163() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5164() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5165() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5166() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5167() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5168() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5169() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5170() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5171() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5172() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5173() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5174() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5175() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5176() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5177() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5178() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5179() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5180() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5181() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5182() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5183() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5184() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5185() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5186() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5187() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5188() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5189() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5190() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5191() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5192() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5193() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5194() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5195() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5196() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5197() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5198() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5199() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5200() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5201() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5202() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5203() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5204() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5205() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5206() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5207() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5208() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5209() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5210() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5211() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5212() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5213() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5214() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5215() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5216() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5217() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5218() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5219() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5220() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5221() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5222() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5223() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5224() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5225() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5226() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5227() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5228() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5229() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5230() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5231() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5232() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5233() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5234() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5235() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5236() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5237() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5238() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5239() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5240() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5241() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5242() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5243() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5244() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5245() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5246() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5247() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5248() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5249() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5250() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5251() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5252() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5253() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5254() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5255() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5256() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5257() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5258() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5259() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5260() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5261() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5262() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5263() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5264() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5265() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5266() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5267() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5268() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5269() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5270() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5271() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5272() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5273() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5274() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5275() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5276() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5277() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5278() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5279() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5280() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5281() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5282() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5283() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5284() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5285() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5286() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5287() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5288() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5289() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5290() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5291() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5292() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5293() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5294() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5295() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5296() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5297() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5298() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5299() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5300() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5301() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5302() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5303() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5304() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5305() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5306() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5307() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5308() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5309() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5310() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5311() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5312() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5313() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5314() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5315() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5316() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5317() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5318() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5319() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5320() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5321() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5322() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5323() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5324() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5325() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5326() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5327() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5328() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5329() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5330() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5331() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5332() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5333() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5334() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5335() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5336() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5337() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5338() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5339() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5340() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5341() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5342() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5343() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5344() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5345() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5346() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5347() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5348() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5349() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5350() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5351() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5352() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5353() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5354() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5355() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5356() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5357() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5358() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5359() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5360() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5361() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5362() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5363() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5364() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5365() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5366() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5367() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5368() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5369() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5370() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5371() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5372() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5373() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5374() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5375() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5376() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5377() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5378() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5379() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5380() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5381() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5382() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5383() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5384() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5385() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5386() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5387() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5388() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5389() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5390() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5391() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5392() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5393() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5394() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5395() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5396() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5397() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5398() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5399() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5400() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5401() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5402() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5403() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5404() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5405() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5406() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5407() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5408() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5409() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5410() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5411() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5412() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5413() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5414() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5415() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5416() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5417() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5418() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5419() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5420() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5421() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5422() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5423() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5424() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5425() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5426() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5427() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5428() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5429() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5430() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5431() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5432() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5433() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5434() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5435() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5436() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5437() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5438() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5439() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5440() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5441() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5442() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5443() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5444() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5445() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5446() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5447() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5448() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5449() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5450() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5451() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5452() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5453() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5454() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5455() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5456() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5457() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5458() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5459() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5460() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5461() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5462() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5463() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5464() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5465() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5466() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5467() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5468() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5469() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5470() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5471() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5472() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5473() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5474() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5475() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5476() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5477() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5478() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5479() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5480() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5481() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5482() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5483() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5484() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5485() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5486() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5487() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5488() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5489() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5490() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5491() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5492() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5493() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5494() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5495() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5496() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5497() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5498() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5499() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5500() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5501() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5502() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5503() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5504() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5505() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5506() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5507() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5508() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5509() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5510() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5511() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5512() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5513() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5514() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5515() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5516() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5517() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5518() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5519() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5520() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5521() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5522() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5523() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5524() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5525() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5526() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5527() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5528() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5529() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5530() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5531() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5532() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5533() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5534() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5535() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5536() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5537() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5538() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5539() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5540() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5541() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5542() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5543() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5544() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5545() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5546() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5547() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5548() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5549() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5550() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5551() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5552() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5553() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5554() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5555() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5556() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5557() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5558() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5559() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5560() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5561() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5562() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5563() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5564() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5565() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5566() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5567() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5568() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5569() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5570() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5571() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5572() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5573() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5574() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5575() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5576() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5577() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5578() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5579() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5580() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5581() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5582() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5583() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5584() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5585() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5586() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5587() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5588() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5589() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5590() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5591() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5592() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5593() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5594() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5595() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5596() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5597() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5598() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5599() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5600() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5601() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5602() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5603() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5604() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5605() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5606() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5607() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5608() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5609() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5610() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5611() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5612() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5613() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5614() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5615() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5616() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5617() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5618() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5619() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5620() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5621() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5622() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5623() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5624() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5625() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5626() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5627() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5628() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5629() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5630() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5631() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5632() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5633() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5634() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5635() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5636() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5637() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5638() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5639() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5640() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5641() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5642() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5643() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5644() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5645() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5646() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5647() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5648() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5649() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5650() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5651() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5652() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5653() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5654() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5655() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5656() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5657() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5658() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5659() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5660() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5661() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5662() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5663() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5664() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5665() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5666() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5667() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5668() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5669() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5670() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5671() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5672() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5673() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5674() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5675() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5676() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5677() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5678() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5679() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5680() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5681() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5682() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5683() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5684() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5685() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5686() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5687() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5688() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5689() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5690() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5691() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5692() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5693() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5694() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5695() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5696() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5697() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5698() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5699() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5700() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5701() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5702() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5703() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5704() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5705() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5706() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5707() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5708() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5709() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5710() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5711() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5712() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5713() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5714() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5715() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5716() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5717() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5718() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5719() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5720() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5721() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5722() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5723() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5724() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5725() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5726() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5727() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5728() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5729() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5730() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5731() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5732() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5733() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5734() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5735() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5736() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5737() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5738() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5739() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5740() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5741() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5742() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5743() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5744() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5745() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5746() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5747() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5748() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5749() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5750() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5751() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5752() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5753() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5754() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5755() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5756() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5757() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5758() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5759() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5760() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5761() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5762() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5763() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5764() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5765() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5766() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5767() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5768() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5769() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5770() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5771() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5772() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5773() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5774() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5775() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5776() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5777() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5778() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5779() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5780() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5781() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5782() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5783() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5784() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5785() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5786() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5787() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5788() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5789() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5790() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5791() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5792() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5793() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5794() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5795() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5796() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5797() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5798() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5799() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5800() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5801() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5802() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5803() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5804() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5805() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5806() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5807() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5808() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5809() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5810() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5811() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5812() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5813() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5814() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5815() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5816() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5817() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5818() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5819() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5820() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5821() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5822() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5823() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5824() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5825() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5826() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5827() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5828() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5829() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5830() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5831() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5832() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5833() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5834() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5835() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5836() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5837() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5838() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5839() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5840() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5841() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5842() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5843() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5844() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5845() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5846() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5847() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5848() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5849() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5850() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5851() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5852() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5853() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5854() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5855() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5856() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5857() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5858() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5859() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5860() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5861() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5862() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5863() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5864() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5865() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5866() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5867() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5868() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5869() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5870() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5871() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5872() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5873() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5874() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5875() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5876() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5877() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5878() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5879() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5880() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5881() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5882() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5883() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5884() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5885() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5886() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5887() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5888() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5889() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5890() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5891() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5892() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5893() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5894() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5895() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5896() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5897() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5898() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5899() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5900() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5901() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5902() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5903() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5904() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5905() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5906() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5907() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5908() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5909() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5910() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5911() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5912() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5913() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5914() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5915() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5916() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5917() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5918() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5919() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5920() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5921() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5922() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5923() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5924() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5925() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5926() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5927() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5928() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5929() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5930() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5931() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5932() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5933() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5934() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5935() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5936() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5937() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5938() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5939() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5940() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5941() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5942() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5943() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5944() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5945() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5946() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5947() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5948() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5949() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5950() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5951() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5952() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5953() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5954() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5955() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5956() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5957() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5958() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5959() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5960() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5961() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5962() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5963() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5964() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5965() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5966() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5967() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5968() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5969() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5970() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5971() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5972() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5973() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5974() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5975() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5976() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5977() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5978() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5979() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5980() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5981() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5982() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5983() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5984() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5985() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5986() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5987() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5988() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test5989() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5990() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5991() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5992() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test5993() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5994() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5995() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5996() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test5997() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test5998() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test5999() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6000() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6001() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6002() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6003() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6004() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6005() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6006() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6007() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6008() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6009() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6010() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6011() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6012() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6013() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6014() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6015() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6016() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6017() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6018() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6019() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6020() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6021() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6022() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6023() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6024() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6025() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6026() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6027() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6028() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6029() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6030() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6031() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6032() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6033() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6034() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6035() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6036() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6037() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6038() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6039() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6040() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6041() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6042() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6043() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6044() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6045() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6046() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6047() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6048() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6049() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6050() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6051() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6052() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6054() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6055() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6056() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6057() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6058() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6059() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6060() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6061() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6062() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6063() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6064() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6065() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6066() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6067() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6068() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6069() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6070() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6071() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6072() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6073() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6074() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6075() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6076() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6077() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6078() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6079() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6080() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6081() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6082() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6083() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6084() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6085() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6086() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6087() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6088() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6089() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6090() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6091() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6092() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6093() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6094() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6095() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6096() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6097() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6098() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6099() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6100() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6101() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6102() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6103() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6104() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6105() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6106() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6107() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6108() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6109() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6110() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6111() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6112() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6113() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6114() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6115() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6116() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6117() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6118() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6119() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6120() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6121() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6122() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6123() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6124() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6125() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6126() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6127() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6128() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6129() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6130() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6131() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6132() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6133() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6134() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6135() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6136() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6137() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6138() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6139() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6140() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6141() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6142() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6143() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6144() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6145() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6146() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6147() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6148() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6149() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6150() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6151() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6152() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6153() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6154() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6155() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6156() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6157() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6158() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6159() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6160() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6161() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6162() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6163() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6164() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6165() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6166() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6167() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6168() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6169() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6170() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6171() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6172() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6173() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6174() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6175() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6176() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6177() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6178() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6179() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6180() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6181() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6182() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6183() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6184() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6185() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6186() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6187() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6188() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6189() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6190() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6191() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6192() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6193() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6194() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6195() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6196() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6197() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6198() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6199() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6200() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6201() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6202() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6203() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6204() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6205() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6206() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6207() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6208() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6209() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6210() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6211() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6212() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6213() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6214() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6215() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6216() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6217() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6218() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6219() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6220() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6221() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6222() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6223() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6224() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6225() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6226() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6227() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6228() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6229() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6230() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6231() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6232() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6233() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6234() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6235() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6236() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6237() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6238() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6239() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6240() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6241() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6242() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6243() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6244() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6245() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6246() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6247() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6248() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6249() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6250() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6251() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6252() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6253() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6254() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6255() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6256() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6257() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6258() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6259() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6260() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6261() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6262() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6263() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6264() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6265() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6266() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6267() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6268() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6269() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6270() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6271() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6272() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6273() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6274() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6275() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6276() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6277() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6278() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6279() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6280() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6281() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6282() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6283() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6284() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6285() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6286() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6287() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6288() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6289() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6290() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6291() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6292() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6293() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6294() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6295() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6296() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6297() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6298() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6299() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6300() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6301() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6302() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6303() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6304() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6305() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6306() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6307() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6308() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6309() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6310() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6311() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6312() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6313() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6314() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6315() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6316() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6317() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6318() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6319() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6320() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6321() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6322() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6323() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6324() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6325() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6326() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6327() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6328() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6329() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6330() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6331() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6332() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6333() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6334() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6335() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6336() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6337() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6338() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6339() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6340() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6341() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6342() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6343() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6344() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6345() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6346() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6347() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6348() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6349() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6350() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6351() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6352() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6353() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6354() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6355() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6356() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6357() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6358() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6359() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6360() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6361() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6362() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6363() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6364() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6365() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6366() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6367() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6368() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6369() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6370() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6371() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6372() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6373() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6374() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6375() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6376() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6377() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6378() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6379() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6380() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6381() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6382() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6383() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6384() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6385() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6386() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6387() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6388() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6389() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6390() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6391() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6392() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6393() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6394() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6395() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6396() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6397() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6398() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6399() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6400() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6401() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6402() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6403() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6404() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6405() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6406() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6407() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6408() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6409() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6410() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6411() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6412() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6413() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6414() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6415() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6416() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6417() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6418() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6419() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6420() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6421() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6422() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6423() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6424() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6425() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6426() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6427() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6428() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6429() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6430() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6431() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6432() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6433() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6434() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6435() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6436() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6437() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6438() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6439() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6440() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6441() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6442() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6443() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6444() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6445() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6446() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6447() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6448() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6449() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6450() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6451() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6452() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6453() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6454() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6455() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6456() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6457() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6458() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6459() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6460() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6461() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6462() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6463() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6464() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6465() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6466() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6467() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6468() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6469() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6470() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6471() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6472() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6473() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6474() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6475() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6476() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6477() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6478() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6479() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6480() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6481() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6482() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6483() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6484() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6485() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6486() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6487() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6488() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6489() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6490() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6491() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6492() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6493() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6494() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6495() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6496() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6497() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6498() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6499() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6500() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6501() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6502() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6503() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6504() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6505() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6506() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6507() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6508() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6509() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6510() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6511() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6512() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6513() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6514() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6515() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6516() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6517() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6518() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6519() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6520() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6521() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6522() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6523() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6524() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6525() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6526() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6527() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6528() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6529() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6530() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6531() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6532() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6533() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6534() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6535() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6536() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6537() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6538() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6539() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6540() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6541() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6542() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6543() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6544() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6545() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6546() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6547() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6548() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6549() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6550() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6551() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6552() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6553() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6554() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6555() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6556() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6557() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6558() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6559() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6560() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6561() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6562() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6563() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6564() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6565() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6566() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6567() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6568() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6569() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6570() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6571() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6572() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6573() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6574() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6575() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6576() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6577() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6578() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6579() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6580() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6581() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6582() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6583() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6584() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6585() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6586() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6587() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6588() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6589() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6590() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6591() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6592() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6593() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6594() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6595() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6596() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6597() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6598() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6599() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6600() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6601() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6602() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6603() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6604() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6605() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6606() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6607() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6608() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6609() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6610() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6611() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6612() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6613() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6614() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6615() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6616() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6617() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6618() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6619() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6620() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6621() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6622() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6623() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6624() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6625() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6626() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6627() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6628() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6629() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6630() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6631() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6632() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6633() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6634() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6635() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6636() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6637() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6638() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6639() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6640() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6641() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6642() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6643() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6644() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6645() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6646() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6647() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6648() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6649() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6650() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6651() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6652() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6653() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6654() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6655() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6656() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6657() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6658() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6659() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6660() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6661() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6662() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6663() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6664() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6665() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6666() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6667() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6668() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6669() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6670() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6671() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6672() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6673() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6674() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6675() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6676() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6677() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6678() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6679() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6680() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6681() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6682() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6683() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6684() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6685() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6686() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6687() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6688() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6689() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6690() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6691() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6692() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6693() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6694() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6695() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6696() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6697() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6698() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6699() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6700() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6701() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6702() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6703() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6704() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6705() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6706() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6707() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6708() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6709() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6710() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6711() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6712() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6713() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6714() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6715() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6716() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6717() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6718() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6719() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6720() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6721() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6722() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6723() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6724() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6725() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6726() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6727() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6728() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6729() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6730() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6731() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6732() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6733() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6734() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6735() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6736() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6737() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6738() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6739() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6740() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6741() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6742() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6743() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6744() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6745() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6746() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6747() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6748() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6749() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6750() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6751() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6752() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6753() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6754() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6755() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6756() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6757() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6758() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6759() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6760() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6761() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6762() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6763() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6764() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6765() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6766() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6767() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6768() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6769() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6770() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6771() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6772() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6773() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6774() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6775() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6776() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6777() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6778() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6779() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6780() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6781() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6782() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6783() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6784() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6785() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6786() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6787() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6788() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6789() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6790() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6791() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6792() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6793() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6794() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6795() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6796() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6797() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6798() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6799() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6800() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6801() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6802() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6803() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6804() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6805() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6806() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6807() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6808() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6809() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6810() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6811() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6812() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6813() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6814() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6815() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6816() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6817() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6818() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6819() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6820() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6821() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6822() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6823() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6824() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6825() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6826() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6827() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6828() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6829() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6830() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6831() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6832() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6833() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6834() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6835() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6836() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6837() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6838() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6839() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6840() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6841() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6842() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6843() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6844() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6845() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6846() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6847() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6848() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6849() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6850() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6851() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6852() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6853() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6854() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6855() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6856() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6857() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6858() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6859() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6860() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6861() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6862() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6863() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6864() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6865() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6866() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6867() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6868() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6869() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6870() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6871() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6872() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6873() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6874() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6875() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6876() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6877() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6878() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6879() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6880() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6881() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6882() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6883() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6884() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6885() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6886() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6887() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6888() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6889() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6890() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6891() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6892() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6893() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6894() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6895() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6896() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6897() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6898() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6899() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6900() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6901() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6902() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6903() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6904() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6905() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6906() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6907() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6908() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6909() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6910() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6911() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6912() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6913() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6914() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6915() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6916() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6917() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6918() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6919() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6920() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6921() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6922() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6923() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6924() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6925() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6926() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6927() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6928() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6929() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6930() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6931() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6932() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6933() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6934() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6935() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test6936() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6937() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6938() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6939() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6940() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6941() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6942() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6943() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6944() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6945() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6946() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6947() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6948() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6949() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6950() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6951() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6952() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6953() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6954() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6955() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6956() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6957() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6958() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6959() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6960() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6961() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6962() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6963() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6964() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6965() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6966() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6967() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6968() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6969() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6970() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6971() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6972() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6973() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6974() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6975() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6976() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6977() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6978() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6979() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6980() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6981() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6982() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6983() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6984() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test6985() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6986() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6987() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6988() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6989() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6990() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6991() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6992() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6993() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test6994() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6995() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test6996() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test6997() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6998() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test6999() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7000() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7001() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7002() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7003() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7004() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7005() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7006() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7007() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7008() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7009() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7010() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7011() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7012() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7013() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7014() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7015() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7016() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7017() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7018() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7019() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7020() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7021() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7022() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7023() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7024() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7025() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7026() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7027() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7028() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7029() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7030() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7031() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7032() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7033() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7034() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7035() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7036() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7037() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7038() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7039() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7040() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7041() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7042() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7043() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7044() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7045() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7046() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7047() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7048() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7049() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7050() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7051() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7052() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7054() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7055() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7056() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7057() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7058() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7059() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7060() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7061() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7062() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7063() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7064() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7065() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7066() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7067() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7068() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7069() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7070() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7071() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7072() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7073() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7074() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7075() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7076() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7077() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7078() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7079() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7080() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7081() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7082() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7083() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7084() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7085() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7086() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7087() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7088() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7089() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7090() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7091() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7092() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7093() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7094() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7095() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7096() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7097() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7098() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7099() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7100() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7101() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7102() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7103() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7104() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7105() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7106() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7107() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7108() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7109() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7110() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7111() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7112() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7113() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7114() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7115() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7116() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7117() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7118() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7119() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7120() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7121() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7122() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7123() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7124() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7125() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7126() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7127() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7128() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7129() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7130() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7131() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7132() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7133() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7134() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7135() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7136() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7137() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7138() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7139() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7140() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7141() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7142() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7143() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7144() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7145() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7146() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7147() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7148() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7149() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7150() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7151() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7152() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7153() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7154() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7155() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7156() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7157() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7158() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7159() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7160() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7161() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7162() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7163() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7164() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7165() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7166() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7167() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7168() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7169() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7170() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7171() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7172() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7173() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7174() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7175() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7176() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7177() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7178() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7179() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7180() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7181() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7182() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7183() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7184() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7185() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7186() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7187() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7188() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7189() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7190() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7191() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7192() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7193() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7194() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7195() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7196() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7197() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7198() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7199() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7200() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7201() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7202() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7203() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7204() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7205() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7206() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7207() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7208() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7209() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7210() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7211() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7212() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7213() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7214() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7215() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7216() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7217() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7218() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7219() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7220() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7221() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7222() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7223() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7224() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7225() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7226() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7227() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7228() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7229() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7230() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7231() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7232() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7233() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7234() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7235() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7236() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7237() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7238() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7239() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7240() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7241() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7242() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7243() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7244() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7245() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7246() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7247() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7248() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7249() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7250() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7251() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7252() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7253() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7254() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7255() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7256() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7257() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7258() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7259() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7260() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7261() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7262() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7263() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7264() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7265() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7266() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7267() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7268() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7269() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7270() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7271() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7272() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7273() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7274() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7275() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7276() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7277() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7278() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7279() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7280() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7281() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7282() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7283() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7284() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7285() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7286() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7287() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7288() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7289() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7290() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7291() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7292() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7293() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7294() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7295() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7296() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7297() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7298() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7299() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7300() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7301() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7302() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7303() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7304() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7305() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7306() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7307() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7308() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7309() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7310() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7311() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7312() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7313() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7314() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7315() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7316() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7317() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7318() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7319() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7320() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7321() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7322() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7323() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7324() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7325() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7326() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7327() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7328() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7329() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7330() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7331() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7332() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7333() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7334() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7335() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7336() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7337() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7338() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7339() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7340() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7341() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7342() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7343() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7344() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7345() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7346() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7347() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7348() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7349() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7350() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7351() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7352() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7353() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7354() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7355() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7356() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7357() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7358() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7359() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7360() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7361() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7362() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7363() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7364() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7365() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7366() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7367() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7368() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7369() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7370() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7371() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7372() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7373() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7374() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7375() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7376() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7377() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7378() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7379() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7380() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7381() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7382() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7383() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7384() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7385() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7386() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7387() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7388() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7389() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7390() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7391() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7392() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7393() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7394() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7395() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7396() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7397() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7398() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7399() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7400() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7401() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7402() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7403() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7404() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7405() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7406() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7407() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7408() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7409() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7410() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7411() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7412() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7413() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7414() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7415() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7416() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7417() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7418() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7419() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7420() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7421() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7422() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7423() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7424() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7425() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7426() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7427() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7428() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7429() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7430() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7431() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7432() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7433() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7434() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7435() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7436() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7437() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7438() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7439() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7440() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7441() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7442() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7443() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7444() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7445() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7446() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7447() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7448() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7449() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7450() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7451() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7452() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7453() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7454() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7455() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7456() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7457() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7458() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7459() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7460() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7461() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7462() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7463() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7464() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7465() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7466() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7467() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7468() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7469() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7470() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7471() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7472() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7473() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7474() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7475() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7476() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7477() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7478() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7479() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7480() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7481() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7482() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7483() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7484() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7485() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7486() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7487() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7488() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7489() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7490() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7491() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7492() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7493() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7494() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7495() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7496() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7497() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7498() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7499() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7500() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7501() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7502() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7503() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7504() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7505() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7506() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7507() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7508() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7509() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7510() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7511() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7512() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7513() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7514() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7515() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7516() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7517() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7518() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7519() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7520() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7521() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7522() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7523() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7524() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7525() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7526() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7527() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7528() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7529() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7530() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7531() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7532() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7533() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7534() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7535() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7536() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7537() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7538() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7539() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7540() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7541() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7542() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7543() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7544() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7545() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7546() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7547() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7548() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7549() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7550() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7551() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7552() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7553() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7554() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7555() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7556() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7557() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7558() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7559() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7560() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7561() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7562() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7563() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7564() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7565() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7566() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7567() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7568() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7569() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7570() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7571() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7572() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7573() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7574() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7575() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7576() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7577() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7578() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7579() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7580() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7581() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7582() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7583() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7584() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7585() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7586() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7587() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7588() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7589() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7590() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7591() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7592() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7593() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7594() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7595() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7596() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7597() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7598() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7599() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7600() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7601() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7602() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7603() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7604() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7605() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7606() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7607() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7608() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7609() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7610() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7611() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7612() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7613() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7614() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7615() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7616() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7617() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7618() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7619() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7620() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7621() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7622() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7623() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7624() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7625() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7626() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7627() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7628() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7629() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7630() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7631() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7632() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7633() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7634() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7635() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7636() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7637() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7638() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7639() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7640() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7641() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7642() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7643() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7644() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7645() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7646() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7647() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7648() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7649() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7650() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7651() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7652() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7653() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7654() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7655() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7656() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7657() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7658() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7659() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7660() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7661() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7662() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7663() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7664() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7665() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7666() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7667() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7668() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7669() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7670() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7671() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7672() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7673() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7674() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7675() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7676() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7677() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7678() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7679() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7680() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7681() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7682() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7683() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7684() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7685() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7686() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7687() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7688() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7689() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7690() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7691() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7692() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7693() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7694() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7695() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7696() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7697() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7698() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7699() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7700() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7701() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7702() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7703() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7704() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7705() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7706() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7707() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7708() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7709() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7710() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7711() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7712() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7713() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7714() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7715() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7716() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7717() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7718() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7719() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7720() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7721() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7722() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7723() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7724() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7725() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7726() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7727() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7728() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7729() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7730() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7731() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7732() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7733() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7734() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7735() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7736() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7737() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7738() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7739() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7740() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7741() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7742() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7743() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7744() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7745() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7746() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7747() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7748() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7749() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7750() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7751() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7752() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7753() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7754() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7755() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7756() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7757() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7758() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7759() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7760() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7761() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7762() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7763() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7764() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7765() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7766() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7767() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7768() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7769() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7770() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7771() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7772() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7773() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7774() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7775() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7776() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7777() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7778() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7779() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7780() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7781() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7782() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7783() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7784() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7785() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7786() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7787() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7788() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7789() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7790() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7791() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7792() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7793() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7794() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7795() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7796() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7797() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7798() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7799() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7800() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7801() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7802() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7803() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7804() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7805() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7806() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7807() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7808() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7809() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7810() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7811() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7812() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7813() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7814() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7815() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7816() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7817() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7818() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7819() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7820() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7821() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7822() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7823() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7824() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7825() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7826() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7827() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7828() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7829() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7830() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7831() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7832() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7833() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7834() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7835() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7836() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7837() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7838() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7839() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7840() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7841() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7842() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7843() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7844() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7845() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7846() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7847() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7848() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7849() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7850() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7851() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7852() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7853() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7854() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7855() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7856() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7857() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7858() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7859() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7860() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7861() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7862() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7863() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7864() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7865() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7866() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7867() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7868() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7869() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7870() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7871() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7872() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7873() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7874() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7875() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7876() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7877() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7878() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7879() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7880() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7881() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7882() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7883() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7884() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7885() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7886() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7887() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7888() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7889() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7890() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7891() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7892() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7893() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7894() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7895() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7896() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7897() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7898() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7899() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7900() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7901() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7902() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7903() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7904() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7905() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test7906() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7907() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7908() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7909() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7910() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7911() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7912() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7913() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7914() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7915() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7916() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7917() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7918() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7919() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7920() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7921() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7922() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7923() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7924() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7925() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7926() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7927() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7928() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7929() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7930() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7931() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7932() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7933() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7934() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7935() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7936() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7937() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7938() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7939() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7940() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7941() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7942() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7943() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7944() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7945() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7946() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7947() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7948() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7949() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7950() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7951() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7952() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7953() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7954() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7955() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7956() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7957() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7958() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7959() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7960() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7961() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7962() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7963() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7964() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7965() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7966() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7967() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7968() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7969() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7970() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7971() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7972() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7973() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7974() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7975() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7976() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7977() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7978() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7979() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7980() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7981() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7982() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7983() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7984() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7985() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7986() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7987() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7988() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7989() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7990() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test7991() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7992() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7993() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7994() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test7995() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7996() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test7997() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test7998() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test7999() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8000() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8001() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8002() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8003() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8004() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8005() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8006() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8007() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8008() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8009() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8010() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8011() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8012() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8013() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8014() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8015() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8016() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8017() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8018() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8019() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8020() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8021() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8022() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8023() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8024() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8025() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8026() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8027() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8028() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8029() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8030() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8031() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8032() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8033() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8034() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8035() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8036() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8037() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8038() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8039() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8040() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8041() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8042() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8043() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8044() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8045() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8046() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8047() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8048() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8049() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8050() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8051() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8052() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8054() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8055() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8056() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8057() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8058() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8059() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8060() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8061() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8062() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8063() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8064() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8065() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8066() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8067() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8068() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8069() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8070() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8071() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8072() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8073() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8074() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8075() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8076() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8077() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8078() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8079() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8080() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8081() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8082() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8083() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8084() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8085() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8086() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8087() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8088() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8089() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8090() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8091() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8092() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8093() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8094() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8095() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8096() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8097() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8098() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8099() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8100() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8101() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8102() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8103() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8104() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8105() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8106() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8107() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8108() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8109() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8110() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8111() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8112() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8113() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8114() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8115() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8116() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8117() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8118() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8119() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8120() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8121() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8122() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8123() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8124() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8125() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8126() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8127() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8128() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8129() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8130() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8131() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8132() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8133() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8134() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8135() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8136() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8137() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8138() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8139() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8140() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8141() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8142() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8143() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8144() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8145() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8146() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8147() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8148() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8149() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8150() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8151() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8152() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8153() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8154() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8155() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8156() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8157() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8158() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8159() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8160() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8161() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8162() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8163() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8164() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8165() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8166() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8167() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8168() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8169() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8170() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8171() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8172() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8173() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8174() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8175() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8176() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8177() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8178() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8179() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8180() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8181() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8182() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8183() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8184() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8185() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8186() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8187() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8188() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8189() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8190() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8191() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8192() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8193() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8194() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8195() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8196() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8197() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8198() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8199() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8200() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8201() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8202() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8203() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8204() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8205() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8206() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8207() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8208() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8209() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8210() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8211() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8212() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8213() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8214() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8215() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8216() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8217() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8218() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8219() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8220() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8221() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8222() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8223() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8224() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8225() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8226() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8227() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8228() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8229() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8230() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8231() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8232() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8233() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8234() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8235() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8236() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8237() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8238() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8239() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8240() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8241() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8242() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8243() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8244() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8245() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8246() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8247() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8248() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8249() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8250() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8251() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8252() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8253() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8254() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8255() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8256() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8257() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8258() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8259() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8260() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8261() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8262() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8263() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8264() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8265() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8266() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8267() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8268() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8269() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8270() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8271() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8272() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8273() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8274() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8275() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8276() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8277() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8278() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8279() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8280() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8281() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8282() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8283() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8284() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8285() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8286() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8287() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8288() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8289() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8290() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8291() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8292() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8293() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8294() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8295() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8296() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8297() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8298() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8299() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8300() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8301() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8302() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8303() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8304() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8305() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8306() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8307() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8308() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8309() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8310() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8311() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8312() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8313() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8314() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8315() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8316() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8317() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8318() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8319() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8320() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8321() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8322() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8323() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8324() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8325() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8326() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8327() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8328() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8329() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8330() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8331() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8332() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8333() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8334() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8335() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8336() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8337() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8338() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8339() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8340() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8341() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8342() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8343() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8344() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8345() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8346() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8347() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8348() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8349() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8350() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8351() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8352() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8353() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8354() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8355() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8356() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8357() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8358() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8359() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8360() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8361() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8362() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8363() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8364() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8365() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8366() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8367() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8368() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8369() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8370() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8371() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8372() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8373() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8374() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8375() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8376() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8377() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8378() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8379() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8380() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8381() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8382() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8383() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8384() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8385() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8386() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8387() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8388() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8389() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8390() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8391() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8392() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8393() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8394() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8395() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8396() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8397() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8398() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8399() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8400() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8401() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8402() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8403() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8404() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8405() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8406() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8407() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8408() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8409() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8410() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8411() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8412() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8413() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8414() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8415() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8416() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8417() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8418() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8419() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8420() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8421() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8422() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8423() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8424() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8425() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8426() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8427() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8428() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8429() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8430() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8431() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8432() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8433() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8434() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8435() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8436() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8437() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8438() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8439() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8440() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8441() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8442() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8443() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8444() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8445() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8446() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8447() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8448() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8449() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8450() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8451() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8452() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8453() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8454() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8455() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8456() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8457() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8458() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8459() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8460() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8461() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8462() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8463() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8464() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8465() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8466() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8467() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8468() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8469() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8470() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8471() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8472() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8473() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8474() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8475() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8476() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8477() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8478() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8479() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8480() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8481() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8482() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8483() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8484() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8485() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8486() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8487() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8488() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8489() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8490() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8491() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8492() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8493() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8494() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8495() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8496() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8497() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8498() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8499() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8500() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8501() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8502() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8503() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8504() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8505() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8506() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8507() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8508() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8509() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8510() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8511() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8512() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8513() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8514() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8515() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8516() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8517() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8518() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8519() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8520() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8521() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8522() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8523() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8524() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8525() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8526() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8527() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8528() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8529() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8530() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8531() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8532() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8533() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8534() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8535() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8536() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8537() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8538() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8539() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8540() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8541() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8542() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8543() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8544() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8545() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8546() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8547() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8548() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8549() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8550() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8551() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8552() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8553() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8554() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8555() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8556() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8557() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8558() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8559() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8560() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8561() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8562() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8563() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8564() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8565() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8566() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8567() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8568() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8569() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8570() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8571() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8572() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8573() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8574() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8575() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8576() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8577() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8578() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8579() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8580() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8581() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8582() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8583() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8584() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8585() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8586() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8587() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8588() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8589() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8590() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8591() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8592() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8593() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8594() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8595() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8596() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8597() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8598() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8599() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8600() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8601() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8602() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8603() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8604() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8605() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8606() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8607() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8608() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8609() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8610() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8611() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8612() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8613() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8614() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8615() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8616() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8617() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8618() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8619() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8620() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8621() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8622() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8623() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8624() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8625() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8626() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8627() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8628() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8629() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8630() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8631() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8632() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8633() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8634() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8635() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8636() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8637() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8638() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8639() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8640() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8641() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8642() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8643() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8644() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8645() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8646() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8647() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8648() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8649() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8650() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8651() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8652() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8653() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8654() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8655() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8656() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8657() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8658() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8659() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8660() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8661() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8662() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8663() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8664() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8665() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8666() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8667() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8668() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8669() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8670() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8671() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8672() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8673() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8674() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8675() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8676() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8677() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8678() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8679() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8680() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8681() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8682() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8683() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8684() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8685() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8686() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8687() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8688() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8689() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8690() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8691() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8692() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8693() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8694() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8695() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8696() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8697() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8698() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8699() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8700() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8701() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8702() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8703() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8704() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8705() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8706() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8707() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8708() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8709() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8710() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8711() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8712() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8713() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8714() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8715() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8716() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8717() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8718() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8719() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8720() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8721() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8722() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8723() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8724() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8725() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8726() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8727() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8728() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8729() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8730() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8731() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8732() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8733() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8734() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8735() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8736() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8737() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8738() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8739() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8740() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8741() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8742() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8743() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8744() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8745() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8746() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8747() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8748() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8749() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8750() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8751() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8752() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8753() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8754() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8755() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8756() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8757() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8758() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8759() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8760() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8761() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8762() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8763() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8764() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8765() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8766() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8767() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8768() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8769() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8770() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8771() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8772() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8773() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8774() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8775() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8776() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8777() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8778() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8779() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8780() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8781() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8782() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8783() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8784() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8785() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8786() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8787() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8788() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8789() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8790() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8791() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8792() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8793() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8794() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8795() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8796() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8797() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8798() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8799() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8800() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8801() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8802() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8803() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8804() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8805() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8806() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8807() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8808() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8809() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8810() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8811() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8812() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8813() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8814() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8815() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8816() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8817() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8818() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8819() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8820() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8821() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8822() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8823() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8824() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8825() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8826() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8827() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8828() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8829() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8830() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8831() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8832() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8833() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8834() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8835() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8836() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8837() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8838() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8839() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8840() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8841() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8842() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8843() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8844() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8845() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8846() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8847() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8848() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8849() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8850() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8851() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8852() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8853() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8854() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8855() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8856() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8857() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8858() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8859() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8860() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8861() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8862() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8863() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8864() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8865() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8866() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8867() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8868() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8869() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8870() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8871() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8872() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8873() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8874() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8875() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8876() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8877() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8878() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8879() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8880() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8881() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8882() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8883() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8884() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8885() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8886() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8887() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8888() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8889() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8890() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8891() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8892() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8893() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8894() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8895() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8896() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8897() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8898() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8899() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8900() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8901() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8902() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8903() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8904() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8905() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8906() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8907() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8908() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8909() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8910() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8911() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8912() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8913() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8914() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8915() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8916() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8917() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8918() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8919() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8920() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8921() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8922() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8923() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8924() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8925() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8926() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8927() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8928() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8929() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8930() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8931() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8932() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8933() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8934() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8935() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8936() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8937() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8938() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8939() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8940() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8941() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8942() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8943() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8944() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8945() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8946() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8947() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8948() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8949() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8950() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8951() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8952() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8953() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8954() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8955() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8956() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8957() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8958() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8959() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8960() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test8961() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8962() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8963() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8964() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8965() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8966() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8967() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8968() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8969() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8970() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8971() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8972() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8973() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8974() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8975() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8976() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8977() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8978() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8979() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8980() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8981() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8982() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8983() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8984() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8985() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8986() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test8987() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8988() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8989() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8990() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8991() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8992() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test8993() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8994() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8995() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8996() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test8997() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test8998() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test8999() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9000() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9001() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9002() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9003() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9004() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9005() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9006() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9007() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9008() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9009() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9010() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9011() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9012() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9013() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9014() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9015() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9016() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9017() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9018() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9019() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9020() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9021() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9022() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9023() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9024() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9025() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9026() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9027() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9028() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9029() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9030() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9031() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9032() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9033() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9034() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9035() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9036() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9037() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9038() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9039() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9040() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9041() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9042() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9043() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9044() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9045() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9046() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9047() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9048() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9049() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9050() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9051() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9052() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9053() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9054() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9055() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9056() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9057() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9058() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9059() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9060() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9061() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9062() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9063() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9064() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9065() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9066() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9067() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9068() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9069() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9070() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9071() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9072() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9073() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9074() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9075() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9076() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9077() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9078() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9079() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9080() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9081() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9082() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 4, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9083() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9084() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9085() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9086() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9087() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9088() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9089() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9090() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9091() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9092() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9093() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9094() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9095() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9096() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9097() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9098() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9099() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9100() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9101() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9102() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9103() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9104() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9105() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9106() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9107() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9108() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9109() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9110() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9111() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9112() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9113() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9114() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9115() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9116() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9117() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9118() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9119() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9120() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9121() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9122() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9123() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9124() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9125() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9126() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9127() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9128() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9129() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9130() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9131() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9132() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9133() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9134() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9135() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9136() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9137() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9138() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9139() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9140() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9141() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9142() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9143() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9144() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9145() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9146() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9147() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9148() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9149() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9150() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9151() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9152() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9153() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9154() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9155() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9156() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9157() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9158() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9159() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9160() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9161() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9162() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9163() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9164() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9165() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9166() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9167() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9168() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9169() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9170() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9171() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9172() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9173() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9174() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9175() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9176() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9177() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9178() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9179() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9180() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9181() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9182() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9183() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9184() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9185() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9186() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9187() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9188() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9189() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9190() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9191() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9192() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9193() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9194() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9195() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9196() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9197() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9198() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9199() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9200() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9201() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9202() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 5, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9203() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9204() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9205() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9206() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9207() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9208() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9209() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9210() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9211() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9212() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9213() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9214() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9215() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9216() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9217() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9218() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9219() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9220() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9221() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9222() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9223() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9224() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9225() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9226() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9227() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9228() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9229() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9230() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9231() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9232() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9233() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9234() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9235() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9236() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9237() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9238() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9239() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9240() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9241() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9242() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9243() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9244() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9245() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9246() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9247() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9248() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9249() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9250() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9251() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9252() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9253() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9254() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9255() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9256() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9257() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9258() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9259() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9260() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9261() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9262() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9263() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9264() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9265() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9266() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9267() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9268() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9269() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9270() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9271() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9272() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9273() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9274() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9275() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9276() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9277() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9278() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9279() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9280() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9281() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9282() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9283() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9284() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9285() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9286() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9287() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9288() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9289() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9290() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9291() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9292() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9293() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9294() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9295() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9296() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9297() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9298() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9299() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9300() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9301() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9302() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9303() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9304() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9305() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9306() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9307() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9308() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9309() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9310() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9311() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9312() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9313() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9314() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9315() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9316() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9317() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9318() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9319() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9320() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9321() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9322() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 8, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9323() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9324() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9325() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9326() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9327() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9328() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9329() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9330() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9331() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9332() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9333() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9334() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9335() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9336() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9337() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9338() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9339() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9340() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9341() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9342() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9343() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9344() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9345() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9346() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9347() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9348() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9349() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9350() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9351() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9352() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9353() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9354() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9355() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9356() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9357() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9358() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9359() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9360() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9361() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9362() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9363() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9364() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9365() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9366() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9367() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9368() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9369() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9370() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9371() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9372() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9373() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9374() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9375() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9376() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9377() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9378() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9379() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9380() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9381() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9382() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9383() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9384() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9385() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9386() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9387() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9388() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9389() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9390() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9391() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9392() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9393() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9394() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9395() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9396() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9397() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9398() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9399() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9400() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9401() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9402() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9403() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9404() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9405() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9406() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9407() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9408() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9409() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9410() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9411() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9412() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9413() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9414() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9415() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9416() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9417() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9418() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9419() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9420() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9421() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9422() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9423() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9424() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9425() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9426() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9427() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9428() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9429() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9430() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9431() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9432() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9433() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9434() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9435() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9436() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9437() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9438() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9439() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9440() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9441() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9442() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 7, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9443() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9444() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9445() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9446() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9447() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9448() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9449() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9450() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9451() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9452() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9453() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9454() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9455() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9456() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9457() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9458() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9459() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9460() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9461() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9462() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9463() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9464() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9465() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9466() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9467() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9468() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9469() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9470() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9471() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9472() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9473() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9474() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9475() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9476() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9477() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9478() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9479() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9480() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9481() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9482() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9483() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9484() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9485() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9486() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9487() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9488() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9489() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9490() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9491() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9492() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9493() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9494() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9495() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9496() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9497() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9498() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9499() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9500() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9501() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9502() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9503() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9504() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9505() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9506() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9507() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9508() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9509() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9510() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9511() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9512() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9513() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9514() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9515() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9516() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9517() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9518() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9519() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9520() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9521() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9522() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9523() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9524() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9525() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9526() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9527() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9528() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9529() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9530() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9531() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9532() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 9, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9533() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9534() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 9, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9535() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9536() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9537() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 9, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9538() {
		Task t1 = new Task("t1", 9, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertNull(t1.getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t6,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext().getNext());
	}

	public void test9539() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9540() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9541() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9542() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9543() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9544() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9545() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9546() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9547() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9548() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9549() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9550() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9551() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9552() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9553() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9554() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9555() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9556() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9557() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9558() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9559() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9560() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t6,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9561() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9562() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 9, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 6, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9563() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9564() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9565() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9566() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9567() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9568() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9569() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9570() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9571() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9572() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9573() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9574() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9575() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9576() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9577() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9578() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9579() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9580() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9581() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9582() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9583() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9584() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9585() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9586() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 6, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9587() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9588() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9589() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9590() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9591() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9592() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9593() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9594() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9595() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9596() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9597() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9598() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9599() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9600() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9601() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9602() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9603() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9604() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9605() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9606() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9607() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9608() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9609() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9610() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 5, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9611() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9612() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9613() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9614() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9615() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9616() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9617() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9618() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9619() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9620() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9621() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9622() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9623() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9624() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9625() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9626() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9627() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9628() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9629() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9630() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9631() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9632() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9633() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9634() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 8, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9635() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9636() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9637() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9638() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9639() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9640() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9641() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9642() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9643() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9644() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9645() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9646() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9647() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9648() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9649() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9650() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9651() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9652() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 4, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9653() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9654() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 4, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9655() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9656() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9657() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 4, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t5,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9658() {
		Task t1 = new Task("t1", 4, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 7, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t5,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getNext());
	}

	public void test9659() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9660() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9661() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9662() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9663() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9664() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 8, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9665() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9666() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9667() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9668() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t4,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9669() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9670() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 5, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9671() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9672() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9673() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 7, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9674() {
		Task t1 = new Task("t1", 7, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext());
	}

	public void test9675() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9676() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 7, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 6, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t4,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9677() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t3,t1.getNext().getNext());
		assertSame(t2,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9678() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 6, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t3,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9679() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 8, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t2,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t3,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

	public void test9680() {
		Task t1 = new Task("t1", 8, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 5, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t6,t1.getPrevious());
		assertNull(t1.getPrevious().getPrevious());
		assertSame(t4,t1.getNext());
		assertSame(t2,t1.getNext().getNext());
		assertSame(t3,t1.getNext().getNext().getNext());
		assertSame(t5,t1.getNext().getNext().getNext().getNext());
		assertNull(t1.getNext().getNext().getNext().getNext().getNext());
	}

	public void test9681() {
		Task t1 = new Task("t1", 5, 1000, 1);
		Task t2 = new Task("t2", 6, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t2,t1.getPrevious());
		assertSame(t4,t1.getPrevious().getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t5,t1.getNext());
		assertNull(t1.getNext().getNext());
	}

	public void test9682() {
		Task t1 = new Task("t1", 6, 1000, 1);
		Task t2 = new Task("t2", 5, 1000, 2);
		t1.addInPriority(t2,comp);
		Task t3 = new Task("t3", 8, 1000, 3);
		t1.addInPriority(t3,comp);
		Task t4 = new Task("t4", 7, 1000, 4);
		t1.addInPriority(t4,comp);
		Task t5 = new Task("t5", 4, 1000, 5);
		t1.addInPriority(t5,comp);
		Task t6 = new Task("t6", 9, 1000, 6);
		t1.addInPriority(t6,comp);
		assertSame(t4,t1.getPrevious());
		assertSame(t3,t1.getPrevious().getPrevious());
		assertSame(t6,t1.getPrevious().getPrevious().getPrevious());
		assertNull(t1.getPrevious().getPrevious().getPrevious().getPrevious());
		assertSame(t2,t1.getNext());
		assertSame(t5,t1.getNext().getNext());
		assertNull(t1.getNext().getNext().getNext());
	}

}
